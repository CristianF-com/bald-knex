// Generated by CoffeeScript 1.9.3
(function() {
  var BaldError, handleError, sendResponse;

  sendResponse = require('./apiTools').sendResponse;

  handleError = require('./common').handleError;

  BaldError = require('./error');

  module.exports = function(app, endpoint, manager, middleware) {
    var routes;
    routes = [
      {
        name: 'list',
        method: 'get',
        url: endpoint.plural,
        handler: function(req, res) {
          var query;
          query = {};
          query.where = req.query;
          if (req.query.include != null) {
            query.include = JSON.parse(req.query.include);
          }
          delete query.where.include;
          return manager.list(query, function(err, data) {
            return sendResponse(res, err, data);
          });
        }
      }, {
        name: 'read',
        method: 'get',
        url: endpoint.singular,
        handler: function(req, res) {
          var query;
          query = {};
          query.where = {
            id: req.params.id
          };
          if (req.query.include != null) {
            query.include = JSON.parse(req.query.include);
          }
          return manager.read(query, function(err, data) {
            return sendResponse(res, err, data);
          });
        }
      }, {
        name: 'create',
        method: 'post',
        url: endpoint.plural,
        handler: function(req, res) {
          return manager.create(req.body, function(err, data) {
            return sendResponse(res, err, data);
          });
        }
      }, {
        name: 'update',
        method: 'put',
        url: endpoint.singular,
        handler: function(req, res) {
          return manager.update({
            id: req.params.id
          }, req.body, function(err, data) {
            return sendResponse(res, err, data);
          });
        }
      }, {
        name: 'updateMultiple',
        method: 'put',
        url: endpoint.plural,
        handler: function(req, res, next) {
          var err, values;
          try {
            values = JSON.parse(req.body.values);
          } catch (_error) {
            err = new Error('Invalid JSON data sent to updateMultiple route.');
            return sendResponse(res, err);
          }
          return manager.updateMultiple(values, function(err, data) {
            return sendResponse(res, err, data);
          });
        }
      }, {
        name: 'delete',
        method: 'delete',
        url: endpoint.singular,
        handler: function(req, res) {
          return manager.del(req.params.id, function(err, data) {
            return sendResponse(res, err, data);
          });
        }
      }
    ];
    return routes.map(function(route) {
      var routeMiddleware;
      if ((middleware != null) && typeof middleware !== 'object') {
        throw new BaldError('BaldControllerError', 'Invalid middleware array provided.');
      }
      if (middleware != null) {
        routeMiddleware = middleware[route.name] || [];
      }
      if (middleware == null) {
        routeMiddleware = [];
      }
      return app[route.method](route.url, routeMiddleware, route.handler);
    });
  };

}).call(this);
