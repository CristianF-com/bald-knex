// Generated by CoffeeScript 1.9.3
(function() {
  var Bald, controller, inflect, manager;

  inflect = require('inflect');

  manager = require('./manager');

  controller = require('./controller');

  Bald = (function() {
    function Bald(arg) {
      var app, sequelize;
      app = arg.app, sequelize = arg.sequelize;
      if ((app == null) || (sequelize == null)) {
        throw new Error('Arguments invalid.');
      }
      this.app = app;
      this.sequelize = sequelize;
    }

    Bald.prototype.resource = function(arg) {
      var endpoints, include, middleware, model, modelManager;
      model = arg.model, endpoints = arg.endpoints, middleware = arg.middleware, include = arg.include;
      if (model == null) {
        throw new Error('Invalid model.');
      }
      if ((endpoints != null) && typeof endpoints !== 'object') {
        throw new Error('Invalid endpoints.');
      }
      endpoints = endpoints || {};
      if ((endpoints.plural == null) && (endpoints.singular == null)) {
        endpoints = {
          plural: '/api/' + inflect.pluralize(model.name),
          singular: '/api/' + inflect.singularize(model.name + '/:id')
        };
      }
      modelManager = manager(model, include);
      controller(this.app, endpoints, modelManager, middleware);
      return modelManager;
    };

    return Bald;

  })();

  module.exports = Bald;

}).call(this);
