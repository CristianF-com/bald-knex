// Generated by CoffeeScript 1.8.0
(function() {
  var async, makeOperation;

  async = require('async');

  makeOperation = require('./common')().makeOperation;

  module.exports = function(model, eagerLoading) {
    var create, del, list, read, update, updateMultiple;
    create = makeOperation(function(values, done) {
      return model.create(values).then(function(data) {
        return done(null, data);
      });
    });
    list = makeOperation(function(done) {
      var query;
      query = {};
      if (eagerLoading != null) {
        query.include = {
          all: true,
          nested: true
        };
      }
      return model.findAll(query).then(function(data) {
        return done(null, data);
      });
    });
    read = makeOperation(function(whereQuery, done) {
      var query;
      query = {
        where: whereQuery
      };
      if (eagerLoading != null) {
        query.include = {
          all: true,
          nested: true
        };
      }
      return model.find(query).then(function(data) {
        return done(null, data);
      });
    });
    update = makeOperation(function(id, values, done) {
      var query;
      query = {
        where: {
          id: id
        }
      };
      if (eagerLoading != null) {
        query.include = {
          all: true,
          nested: true
        };
      }
      return async.waterfall([
        function(done) {
          return model.update(values, query).then(function(data) {
            return done(null);
          });
        }, function(done) {
          return model.find(query).then(function(data) {
            return done(null, data);
          });
        }
      ], function(err, data) {
        return done(err, data);
      });
    });
    updateMultiple = makeOperation(function(values, done) {
      var updateValue;
      updateValue = function(value, done) {
        return async.waterfall([
          function(done) {
            return model.update(value, {
              where: {
                id: value.id
              }
            }).then(function(data) {
              return done(null);
            });
          }, function(done) {
            var query;
            query = {
              where: {
                id: value.id
              }
            };
            if (eagerLoading != null) {
              query.include = {
                all: true,
                nested: true
              };
            }
            return model.find(query).then(function(data) {
              return done(null, value);
            });
          }
        ], function(err, data) {
          return done(null, data);
        });
      };
      return async.map(values, updateValue, done);
    });
    del = makeOperation(function(id, done) {
      return model.destroy({
        where: {
          id: id
        }
      }).then(function(data) {
        return done(null, data);
      });
    });
    return {
      create: create,
      list: list,
      read: read,
      update: update,
      updateMultiple: updateMultiple,
      del: del
    };
  };

}).call(this);
