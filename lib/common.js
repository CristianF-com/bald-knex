// Generated by CoffeeScript 1.10.0
(function() {
  var async, handleError, makeOperation, sendResponse;

  async = require('async');

  sendResponse = require('./apiTools').sendResponse;

  makeOperation = function(action) {
    var operation;
    return operation = function() {
      var operationDone, originalArgs, valueArgs;
      originalArgs = [].slice.call(arguments);
      valueArgs = originalArgs.slice(0, -1);
      operationDone = originalArgs.slice(-1)[0];
      return async.waterfall([
        function(done) {
          var next;
          if (operation.before != null) {
            next = function() {
              return done(null, [].slice.call(arguments));
            };
            return operation.before.apply(null, valueArgs.concat(next));
          } else {
            return done(null, valueArgs);
          }
        }, function(newValueArgs, done) {
          var next;
          next = function() {
            if (operation.after == null) {
              operationDone.apply(null, [].slice.call(arguments));
            }
            return done(null, [].slice.call(arguments));
          };
          return action.apply(null, newValueArgs.concat(next));
        }, function(dataArgs, done) {
          var next;
          if (operation.after != null) {
            next = function() {
              operationDone.apply(null, [].slice.call(arguments));
              return done();
            };
            return operation.after.apply(null, dataArgs.concat(next).concat([valueArgs]));
          } else {
            return done();
          }
        }
      ]);
    };
  };

  handleError = function(err, next) {
    if (/^Sequelize\w+$/.test(err.name) || /^Bald\w+/.test(err.name)) {
      return next(err, null);
    }
    return process.nextTick(function() {
      throw err;
    });
  };

  module.exports = {
    makeOperation: makeOperation,
    handleError: handleError
  };

}).call(this);
